@model StackFaceSystem.Web.Areas.Moderator.ViewModels.ManageCategories.PagableSortableCategoriesViewModel

@Html.Partial("_ErrorOrSuccessPartial")

@using (Html.BeginForm("Index", "ManageCategories", FormMethod.Post, new { role = "form", id = "categoriesForm" }))
{
    @Html.HiddenFor(x => x.SortType)
    @Html.HiddenFor(x => x.SortDirection)
    @Html.HiddenFor(x => x.CurrentPage)
    <div class="note">Data is sorting by @Model.SortType @Model.SortDirection</div>
}

<hr class="style" />
<h3>All Categories</h3>
<hr class="style" />
<div class="row">
    @Ajax.ActionLink("Add new category", "CreateCategory", "ManageCategories",
                                                         new AjaxOptions
                                                         {
                                                             UpdateTargetId = "addCategory",
                                                             HttpMethod = "GET",
                                                             InsertionMode = InsertionMode.Replace,
                                                             OnSuccess = "OnAjaxAddCategorySuccess"
                                                         }, new { @class = "btn btn-default btn-sm pull-right" })
    <div id="editCategory" class="well" style="display:none"></div>
    <table class="table">
        <thead>
            <tr>
                <th><a href="#" data-sortfield="Id" class="header">Id</a></th>
                <th><a href="#" data-sortfield="Name" class="header">Name</a></th>
                <th><a href="#" data-sortfield="CreatedOn" class="header">CreatedOn</a></th>
                <th><a href="#" data-sortfield="ModifiedOn" class="header">ModifiedOn</a></th>
                <th>Posts</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in Model.Categories)
            {
                <tr>
                    <td>@category.Id</td>
                    <td>@category.Name</td>
                    <td>@category.CreatedOn</td>
                    <td>@category.ModifiedOn</td>
                    <td><a href="/Categories/GetCategoryPosts/@category.Name">View</a></td>
                    <td>
                        @Ajax.ActionLink(" ", "EditCategory", "ManageCategories", new { id = category.Id, name = category.Name },
                                                         new AjaxOptions
                                                         {
                                                             UpdateTargetId = "editCategory",
                                                             HttpMethod = "GET",
                                                             InsertionMode = InsertionMode.Replace,
                                                             OnSuccess = "OnAjaxEditCategorySuccess"
                                                         }, new { @class = "btn btn-sm btn-default glyphicon glyphicon-pencil" })
                        <div class="btn btn-sm btn-danger glyphicon glyphicon-remove"></div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div id="addCategory" class="well" style="display:none"></div>
</div>

<nav class="text-center">
    <ul class="pagination">
        @if (Model.CurrentPage > 1)
        {
            <li>
                <a class="manageCategoriesPagerPrevious" href="#" aria-label="Previous">
                    <span aria-hidden="true">&larr;Previous</span>
                </a>
            </li>
        }
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            var className = string.Empty;
            if (Model.CurrentPage == i)
            {
                className = "active";
            }
            <li class="@className"><a class="manageCategoriesPager" href="#" data-pageindex="@i">@i</a></li>
        }
        @if (Model.CurrentPage < Model.TotalPages)
        {
            <li>
                <a class="manageCategoriesPagerNext" href="#" aria-label="Next">
                    <span aria-hidden="true">Next &rarr;</span>
                </a>
            </li>
        }
    </ul>
</nav>

@section Scripts{
    <script>
        $(document).ready(function () {
            $(".header").click(function (evt) {
                var sortfield = $(evt.target).data("sortfield");
                debugger;
                if ($("#SortType").val() == sortfield) {
                    if ($("#SortDirection").val() == "ascending") {
                        $("#SortDirection").val("descending");
                    }
                    else {
                        $("#SortDirection").val("ascending");
                    }
                }
                else {
                    $("#SortType").val(sortfield);
                    $("#SortDirection").val("ascending");
                }

                evt.preventDefault();
                $("#categoriesForm").submit();
            });

            $(".manageCategoriesPager").click(function (evt) {
                var currentpage = $(evt.target).data("pageindex");
                $("#CurrentPage").val(currentpage);
                evt.preventDefault();
                $("#categoriesForm").submit();
            });

            $(".manageCategoriesPagerPrevious").click(function (evt) {
                var value = +$("#CurrentPage").val();
                $("#CurrentPage").val(value - 1);
                evt.preventDefault();
                $("#categoriesForm").submit();
            });

            $(".manageCategoriesPagerNext").click(function (evt) {
                var value = +$("#CurrentPage").val();
                $("#CurrentPage").val(value + 1);
                evt.preventDefault();
                $("#categoriesForm").submit();
            });
        });
    </script>

    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function OnAjaxAddCategorySuccess() {
            $("#addCategory").show(1000);
            $("html, body").animate({
                scrollTop: $("#addCategory").offset().top
            }, 2000);
            $("form").removeData("validator");
            $("form").removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse("form");
        }

        function OnAjaxEditCategorySuccess() {
            $("#editCategory").show(1000);
            $("html, body").animate({
                scrollTop: $("html").offset().top
            }, 2000);
            $("form").removeData("validator");
            $("form").removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse("form");
        }

        $("body").on("click", "#cancel-create-category", function () {
            $("#addCategory").hide(1000);
            $("html, body").animate({
                scrollTop: $("html").offset().top
            }, 2000);
        })

        $("body").on("click", "#cancel-edit-category", function () {
            $("#editCategory").hide(1000);
            $("html, body").animate({
                scrollTop: $("html").offset().top
            }, 2000);
        })
    </script>
}